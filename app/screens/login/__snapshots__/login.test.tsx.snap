// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Login screen should match snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    accessible={false}
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Object {
        "alignItems": "center",
        "flexDirection": "column",
        "justifyContent": "center",
        "paddingHorizontal": 15,
        "paddingVertical": 50,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    focusable={true}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onScroll={[Function]}
    onStartShouldSetResponder={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "flex": 1,
      }
    }
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <Image
        source={
          Object {
            "testUri": "../../../dist/assets/images/logo.png",
          }
        }
        style={
          Object {
            "height": 72,
            "resizeMode": "contain",
          }
        }
      />
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        autoCorrect={false}
        blurOnSubmit={false}
        disableFullscreenUI={true}
        keyboardType="email-address"
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Email or Username"
        placeholderTextColor="rgba(61,60,64,0.5)"
        rejectResponderTermination={true}
        returnKeyType="next"
        style={
          Object {
            "alignSelf": "stretch",
            "borderColor": "gainsboro",
            "borderRadius": 3,
            "borderWidth": 1,
            "color": "#3d3c40",
            "fontSize": 16,
            "height": 45,
            "marginBottom": 5,
            "marginTop": 5,
            "paddingLeft": 10,
          }
        }
        testID="login.username.input"
        underlineColorAndroid="transparent"
        value=""
      />
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        autoCorrect={false}
        disableFullscreenUI={true}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Password"
        placeholderTextColor="rgba(61,60,64,0.5)"
        rejectResponderTermination={true}
        returnKeyType="go"
        secureTextEntry={true}
        style={
          Object {
            "alignSelf": "stretch",
            "borderColor": "gainsboro",
            "borderRadius": 3,
            "borderWidth": 1,
            "color": "#3d3c40",
            "fontSize": 16,
            "height": 45,
            "marginBottom": 5,
            "marginTop": 5,
            "paddingLeft": 10,
          }
        }
        testID="login.password.input"
        underlineColorAndroid="transparent"
        value=""
      />
      <View
        accessibilityRole="button"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "borderColor": "#166de0",
            "borderRadius": 3,
            "borderWidth": 1,
            "marginTop": 10,
            "opacity": 1,
            "padding": 15,
          }
        }
        testID="login.signin.button"
      >
        <Text
          style={
            Array [
              Object {
                "color": "#166de0",
                "fontSize": 17,
                "textAlign": "center",
              },
              Object {},
            ]
          }
        >
          Sign in
        </Text>
      </View>
      <View
        accessibilityRole="button"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderColor": "transparent",
            "marginTop": 15,
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#2389d7",
            }
          }
          testID="login.forgot"
        >
          I forgot my password
        </Text>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
