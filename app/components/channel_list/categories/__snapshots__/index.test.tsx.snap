// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Category List Component  should match snapshot 1`] = `
<RCTScrollView
  ListHeaderComponent={[Function]}
  data={
    Array [
      Object {
        "channels": Array [
          Object {
            "id": "1",
            "name": "Just a channel",
          },
          Object {
            "highlight": true,
            "id": "2",
            "name": "Highlighted!!!",
          },
        ],
        "id": "1",
        "title": "My first Category",
      },
      Object {
        "channels": Array [
          Object {
            "id": "1",
            "name": "Just a channel",
          },
          Object {
            "highlight": true,
            "id": "2",
            "name": "Highlighted!!!",
          },
        ],
        "id": "2",
        "title": "Another cat",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Object {
      "flex": 1,
    }
  }
  viewabilityConfigCallbackPairs={Array []}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            style={
              Object {
                "display": "flex",
                "flexDirection": "row",
              }
            }
          >
            <Icon
              name="message-text-outline"
              style={
                Object {
                  "color": "#ffffff",
                  "fontSize": 24,
                  "lineHeight": 28,
                }
              }
            />
            <Text
              style={
                Array [
                  Array [
                    Object {
                      "fontFamily": "OpenSans-SemiBold",
                      "fontSize": 16,
                      "fontWeight": "600",
                      "lineHeight": 24,
                    },
                  ],
                  Object {
                    "color": "#ffffff",
                    "paddingLeft": 12,
                  },
                ]
              }
            >
              Threads
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "marginTop": 12,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "rgba(255,255,255,0.64)",
              "fontFamily": "OpenSans-SemiBold",
              "fontSize": 12,
              "fontWeight": "600",
              "lineHeight": 16,
            }
          }
        >
          MY FIRST CATEGORY
        </Text>
      </View>
      <View
        data={
          Array [
            Object {
              "id": "1",
              "name": "Just a channel",
            },
            Object {
              "highlight": true,
              "id": "2",
              "name": "Highlighted!!!",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        viewabilityConfigCallbackPairs={Array []}
      >
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "paddingVertical": 4,
              }
            }
          >
            <Icon
              name="globe"
              style={
                Object {
                  "color": "rgba(255,255,255,0.72)",
                  "fontSize": 24,
                  "lineHeight": 28,
                }
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "fontFamily": "OpenSans",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 24,
                  },
                  Object {
                    "color": "rgba(255,255,255,0.72)",
                    "marginTop": 1,
                    "paddingLeft": 12,
                  },
                  undefined,
                ]
              }
            >
              Just a channel
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "paddingVertical": 4,
              }
            }
          >
            <Icon
              name="globe"
              style={
                Object {
                  "color": "rgba(255,255,255,0.72)",
                  "fontSize": 24,
                  "lineHeight": 28,
                }
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "fontFamily": "OpenSans-SemiBold",
                    "fontSize": 16,
                    "fontWeight": "600",
                    "lineHeight": 24,
                  },
                  Object {
                    "color": "rgba(255,255,255,0.72)",
                    "marginTop": 1,
                    "paddingLeft": 12,
                  },
                  Object {
                    "color": "#ffffff",
                  },
                ]
              }
            >
              Highlighted!!!
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "marginTop": 12,
            "paddingVertical": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "rgba(255,255,255,0.64)",
              "fontFamily": "OpenSans-SemiBold",
              "fontSize": 12,
              "fontWeight": "600",
              "lineHeight": 16,
            }
          }
        >
          ANOTHER CAT
        </Text>
      </View>
      <View
        data={
          Array [
            Object {
              "id": "1",
              "name": "Just a channel",
            },
            Object {
              "highlight": true,
              "id": "2",
              "name": "Highlighted!!!",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        viewabilityConfigCallbackPairs={Array []}
      >
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "paddingVertical": 4,
              }
            }
          >
            <Icon
              name="globe"
              style={
                Object {
                  "color": "rgba(255,255,255,0.72)",
                  "fontSize": 24,
                  "lineHeight": 28,
                }
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "fontFamily": "OpenSans",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "lineHeight": 24,
                  },
                  Object {
                    "color": "rgba(255,255,255,0.72)",
                    "marginTop": 1,
                    "paddingLeft": 12,
                  },
                  undefined,
                ]
              }
            >
              Just a channel
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "paddingVertical": 4,
              }
            }
          >
            <Icon
              name="globe"
              style={
                Object {
                  "color": "rgba(255,255,255,0.72)",
                  "fontSize": 24,
                  "lineHeight": 28,
                }
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "fontFamily": "OpenSans-SemiBold",
                    "fontSize": 16,
                    "fontWeight": "600",
                    "lineHeight": 24,
                  },
                  Object {
                    "color": "rgba(255,255,255,0.72)",
                    "marginTop": 1,
                    "paddingLeft": 12,
                  },
                  Object {
                    "color": "#ffffff",
                  },
                ]
              }
            >
              Highlighted!!!
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
